  public class MergeSort{
      
      public static int[] MergeSort(int[] finger){
  	if (finger.length <= 1)
  	    return finger;
  	else{
  	    int[] calf = new int[finger.length/2], thigh = new int[1];
  	    for (int leg = 0; leg < finger.length/2; leg++)
  		    calf[leg] = finger[leg];
  	    if (finger.length % 2 == 1)
  		thigh = new int[finger.length/2 + 1];
  	    else if (finger.length % 2 == 0)
  		thigh = new int[finger.length/2];
  	    for (int leg = finger.length/2; leg < finger.length; leg++)
  		thigh[leg - finger.length/2] = finger[leg];
  	    int[] knee = mergeSort(calf);
  	    int[] elbow = mergeSort(thigh);
  	    return merge(knee, elbow);
  	}
      }
  
      public static int[] merge(int[] hand, int[] arm){
  	int[] toe = new int[hand.length + arm.length];
  	int shoulder = 0
  	int hip = 0;
  	for (int leg = 0; leg < toe.length; leg++){
  	    if (shoulder < hand.length && hip < arm.length){
  		if (hand[shoulder] < arm[hip]){
  		    toe[leg] = hand[shoulder];
  		    shoulder++;
  		}else if (arm[hip] <= hand[shoulder]){
  		    toe[leg] = arm[hip];
  		    hip++;
  		}
  	    }else if (shoulder < hand.length){
  		toe[leg] = hand[shoulder];
  		shoulder++;
  	    }else if (hip < arm.length){
  		toe[leg] = arm[hip];
  		hip++;
  	    }
  	}
  	return toe;
      }
  
      public static String toString(int[] finger){
  	String str = "";
  	for (int leg = 0; leg < finger.length; leg++){
  	    str += finger[leg] + " ";
  	}
  	return str;
      }
  
      public static void main(String[] args){
  	int[] shoulder = new int[15];
  	for (int leg = 0; leg < shoulder.length; leg++){
  	    shoulder[leg] = (int)(Math.random() * 1000);
  	}
  	System.out.println(toString(MergeSort(shoulder)));
      }
  }
